/*
 * Copyright (C) 2024-2025 OpenAni and contributors.
 *
 * 此源代码的使用受 GNU AFFERO GENERAL PUBLIC LICENSE version 3 许可证的约束, 可以在以下链接找到该许可证.
 * Use of this source code is governed by the GNU AGPLv3 license, which can be found at the following link.
 *
 * https://github.com/open-ani/ani/blob/main/LICENSE
 */

// @formatter:off
/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package me.him188.ani.client.models


import kotlinx.serialization.Required
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * 
 *
 * @param id 
 * @param nickname 
 * @param hasPassword 
 * @param isBangumiSessionValid 
 * @param email 
 * @param smallAvatar 
 * @param mediumAvatar 
 * @param largeAvatar 
 * @param registerTime 
 * @param lastLoginTime 
 * @param clientVersion 
 * @param bangumiUsername 
 */
@Serializable

data class AniAniSelfUser (

    @SerialName(value = "id") @Required val id: kotlin.String,

    @SerialName(value = "nickname") @Required val nickname: kotlin.String,

    @SerialName(value = "hasPassword") @Required val hasPassword: kotlin.Boolean,

    @SerialName(value = "isBangumiSessionValid") @Required val isBangumiSessionValid: kotlin.Boolean,

    @SerialName(value = "email") val email: kotlin.String? = null,

    @SerialName(value = "smallAvatar") val smallAvatar: kotlin.String? = null,

    @SerialName(value = "mediumAvatar") val mediumAvatar: kotlin.String? = null,

    @SerialName(value = "largeAvatar") val largeAvatar: kotlin.String? = null,

    @SerialName(value = "registerTime") val registerTime: kotlin.Long? = null,

    @SerialName(value = "lastLoginTime") val lastLoginTime: kotlin.Long? = null,

    @SerialName(value = "clientVersion") val clientVersion: kotlin.String? = null,

    @SerialName(value = "bangumiUsername") val bangumiUsername: kotlin.String? = null

) {


}


// @formatter:on
